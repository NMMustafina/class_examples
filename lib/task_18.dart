/* Задача 18: Статические поля и методы в классе "ObjectCounter"
Описание задачи:

Создай класс ObjectCounter, который будет отслеживать количество созданных объектов этого класса.
В классе должно быть статическое поле:
counter (целое число) — это статическое поле, которое будет хранить количество созданных объектов класса. Оно должно быть доступно для всех объектов класса, а не только для конкретного экземпляра.
В классе должно быть статический метод:
getCounter() — метод, который будет возвращать текущее значение счетчика.
Каждый раз, когда создается новый объект класса ObjectCounter, в конструкторе нужно увеличивать значение поля counter на 1.
Добавь возможность сбросить счетчик:
Метод resetCounter() — метод, который сбрасывает значение счетчика обратно в 0.
Структура задачи:
Статические поля:

Поле counter должно быть статическим, чтобы оно хранило общее значение для всех объектов класса. Это позволит отслеживать общее количество созданных объектов, а не хранить отдельное значение для каждого объекта.
Конструктор:

Каждый раз при создании нового объекта класса ObjectCounter конструктор должен увеличивать значение поля counter на 1, чтобы отражать увеличение количества объектов.
Статический метод getCounter:

Этот метод будет возвращать текущее значение счетчика, показывая, сколько объектов было создано. Поскольку метод статический, его можно вызывать без создания экземпляра класса.
Метод resetCounter:

Этот метод должен сбрасывать значение поля counter обратно в 0. Это может быть полезно, если необходимо начать отсчет заново. */

void main() {
  ObjectCounter objectCounterOne = ObjectCounter();
  ObjectCounter objectCounterTwo = ObjectCounter();
  ObjectCounter objectCounterThree = ObjectCounter();

  ObjectCounter.getCounter();
  ObjectCounter.resetCounter();
  ObjectCounter.getCounter();
}

class ObjectCounter {
  static int counter = 0;

  ObjectCounter() {
    counter++;
  }

  static void getCounter() {
    print('Текущее значение счетчика: $counter');
  }

  static void resetCounter() {
    counter = 0;
  }
}
